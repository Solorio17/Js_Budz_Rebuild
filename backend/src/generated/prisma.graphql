type AggregateBudType {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type BudType {
  id: ID!
  budStrain: String!
  budType: String!
  budTHC: String!
  budCBD: String!
  budImage: String!
  budGramPrice: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BudTypeConnection {
  pageInfo: PageInfo!
  edges: [BudTypeEdge]!
  aggregate: AggregateBudType!
}

input BudTypeCreateInput {
  budStrain: String!
  budType: String!
  budTHC: String!
  budCBD: String!
  budImage: String!
  budGramPrice: Int!
}

type BudTypeEdge {
  node: BudType!
  cursor: String!
}

enum BudTypeOrderByInput {
  id_ASC
  id_DESC
  budStrain_ASC
  budStrain_DESC
  budType_ASC
  budType_DESC
  budTHC_ASC
  budTHC_DESC
  budCBD_ASC
  budCBD_DESC
  budImage_ASC
  budImage_DESC
  budGramPrice_ASC
  budGramPrice_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type BudTypePreviousValues {
  id: ID!
  budStrain: String!
  budType: String!
  budTHC: String!
  budCBD: String!
  budImage: String!
  budGramPrice: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BudTypeSubscriptionPayload {
  mutation: MutationType!
  node: BudType
  updatedFields: [String!]
  previousValues: BudTypePreviousValues
}

input BudTypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BudTypeWhereInput
  AND: [BudTypeSubscriptionWhereInput!]
  OR: [BudTypeSubscriptionWhereInput!]
  NOT: [BudTypeSubscriptionWhereInput!]
}

input BudTypeUpdateInput {
  budStrain: String
  budType: String
  budTHC: String
  budCBD: String
  budImage: String
  budGramPrice: Int
}

input BudTypeUpdateManyMutationInput {
  budStrain: String
  budType: String
  budTHC: String
  budCBD: String
  budImage: String
  budGramPrice: Int
}

input BudTypeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  budStrain: String
  budStrain_not: String
  budStrain_in: [String!]
  budStrain_not_in: [String!]
  budStrain_lt: String
  budStrain_lte: String
  budStrain_gt: String
  budStrain_gte: String
  budStrain_contains: String
  budStrain_not_contains: String
  budStrain_starts_with: String
  budStrain_not_starts_with: String
  budStrain_ends_with: String
  budStrain_not_ends_with: String
  budType: String
  budType_not: String
  budType_in: [String!]
  budType_not_in: [String!]
  budType_lt: String
  budType_lte: String
  budType_gt: String
  budType_gte: String
  budType_contains: String
  budType_not_contains: String
  budType_starts_with: String
  budType_not_starts_with: String
  budType_ends_with: String
  budType_not_ends_with: String
  budTHC: String
  budTHC_not: String
  budTHC_in: [String!]
  budTHC_not_in: [String!]
  budTHC_lt: String
  budTHC_lte: String
  budTHC_gt: String
  budTHC_gte: String
  budTHC_contains: String
  budTHC_not_contains: String
  budTHC_starts_with: String
  budTHC_not_starts_with: String
  budTHC_ends_with: String
  budTHC_not_ends_with: String
  budCBD: String
  budCBD_not: String
  budCBD_in: [String!]
  budCBD_not_in: [String!]
  budCBD_lt: String
  budCBD_lte: String
  budCBD_gt: String
  budCBD_gte: String
  budCBD_contains: String
  budCBD_not_contains: String
  budCBD_starts_with: String
  budCBD_not_starts_with: String
  budCBD_ends_with: String
  budCBD_not_ends_with: String
  budImage: String
  budImage_not: String
  budImage_in: [String!]
  budImage_not_in: [String!]
  budImage_lt: String
  budImage_lte: String
  budImage_gt: String
  budImage_gte: String
  budImage_contains: String
  budImage_not_contains: String
  budImage_starts_with: String
  budImage_not_starts_with: String
  budImage_ends_with: String
  budImage_not_ends_with: String
  budGramPrice: Int
  budGramPrice_not: Int
  budGramPrice_in: [Int!]
  budGramPrice_not_in: [Int!]
  budGramPrice_lt: Int
  budGramPrice_lte: Int
  budGramPrice_gt: Int
  budGramPrice_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [BudTypeWhereInput!]
  OR: [BudTypeWhereInput!]
  NOT: [BudTypeWhereInput!]
}

input BudTypeWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Long

type Mutation {
  createBudType(data: BudTypeCreateInput!): BudType!
  updateBudType(data: BudTypeUpdateInput!, where: BudTypeWhereUniqueInput!): BudType
  updateManyBudTypes(data: BudTypeUpdateManyMutationInput!, where: BudTypeWhereInput): BatchPayload!
  upsertBudType(where: BudTypeWhereUniqueInput!, create: BudTypeCreateInput!, update: BudTypeUpdateInput!): BudType!
  deleteBudType(where: BudTypeWhereUniqueInput!): BudType
  deleteManyBudTypes(where: BudTypeWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  budType(where: BudTypeWhereUniqueInput!): BudType
  budTypes(where: BudTypeWhereInput, orderBy: BudTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BudType]!
  budTypesConnection(where: BudTypeWhereInput, orderBy: BudTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BudTypeConnection!
  node(id: ID!): Node
}

type Subscription {
  budType(where: BudTypeSubscriptionWhereInput): BudTypeSubscriptionPayload
}
